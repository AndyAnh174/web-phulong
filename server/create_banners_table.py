#!/usr/bin/env python3
"""
Script ƒë·ªÉ t·∫°o b·∫£ng banners trong database
Ch·∫°y: python create_banners_table.py
"""
import psycopg2
from config.settings import settings

def create_banners_table():
    """T·∫°o b·∫£ng banners v√† c√°c index li√™n quan"""
    
    # T·∫°o connection string
    connection_string = f"postgresql://{settings.DATABASE_USER}:{settings.DATABASE_PASSWORD}@{settings.DATABASE_HOST}:{settings.DATABASE_PORT}/{settings.DATABASE_NAME}"
    
    # SQL ƒë·ªÉ t·∫°o b·∫£ng
    sql_commands = [
        """
        -- T·∫°o b·∫£ng banners ƒë·ªÉ qu·∫£n l√Ω banner c·ªßa website
        CREATE TABLE IF NOT EXISTS banners (
            id SERIAL PRIMARY KEY,
            title VARCHAR(255) NOT NULL,
            description TEXT,
            image_id INTEGER NOT NULL REFERENCES images(id),
            url VARCHAR(500),
            is_active BOOLEAN DEFAULT TRUE,
            "order" INTEGER DEFAULT 1,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            created_by INTEGER REFERENCES users(id)
        );
        """,
        
        """
        -- T·∫°o index cho c√°c tr∆∞·ªùng th∆∞·ªùng ƒë∆∞·ª£c query
        CREATE INDEX IF NOT EXISTS idx_banners_is_active ON banners(is_active);
        """,
        
        """
        CREATE INDEX IF NOT EXISTS idx_banners_order ON banners("order");
        """,
        
        """
        CREATE INDEX IF NOT EXISTS idx_banners_created_at ON banners(created_at);
        """,
        
        """
        -- Th√™m comment cho b·∫£ng
        COMMENT ON TABLE banners IS 'B·∫£ng qu·∫£n l√Ω banner c·ªßa website';
        """,
        
        """
        COMMENT ON COLUMN banners.title IS 'Ti√™u ƒë·ªÅ banner';
        """,
        
        """
        COMMENT ON COLUMN banners.description IS 'M√¥ t·∫£ banner';
        """,
        
        """
        COMMENT ON COLUMN banners.image_id IS 'ID ·∫£nh banner (tham chi·∫øu t·ª´ b·∫£ng images)';
        """,
        
        """
        COMMENT ON COLUMN banners.url IS 'Link chuy·ªÉn h∆∞·ªõng khi click banner';
        """,
        
        """
        COMMENT ON COLUMN banners.is_active IS 'Tr·∫°ng th√°i hi·ªÉn th·ªã banner (true: hi·ªán, false: ·∫©n)';
        """,
        
        """
        COMMENT ON COLUMN banners."order" IS 'Th·ª© t·ª± hi·ªÉn th·ªã banner (s·ªë nh·ªè hi·ªán tr∆∞·ªõc)';
        """,
        
        """
        COMMENT ON COLUMN banners.created_by IS 'ID ng∆∞·ªùi t·∫°o banner';
        """
    ]
    
    try:
        # K·∫øt n·ªëi database
        print("ƒêang k·∫øt n·ªëi database...")
        conn = psycopg2.connect(connection_string)
        cursor = conn.cursor()
        
        # Th·ª±c thi c√°c c√¢u l·ªánh SQL
        print("ƒêang t·∫°o b·∫£ng banners...")
        for i, sql in enumerate(sql_commands, 1):
            print(f"Th·ª±c thi c√¢u l·ªánh {i}/{len(sql_commands)}...")
            cursor.execute(sql)
        
        # Commit changes
        conn.commit()
        print("‚úÖ T·∫°o b·∫£ng banners th√†nh c√¥ng!")
        
        # Ki·ªÉm tra b·∫£ng ƒë√£ ƒë∆∞·ª£c t·∫°o
        cursor.execute("SELECT COUNT(*) FROM information_schema.tables WHERE table_name = 'banners';")
        table_exists = cursor.fetchone()[0]
        
        if table_exists:
            print("‚úÖ X√°c nh·∫≠n: B·∫£ng banners ƒë√£ t·ªìn t·∫°i trong database")
            
            # Hi·ªÉn th·ªã c·∫•u tr√∫c b·∫£ng
            cursor.execute("""
                SELECT column_name, data_type, is_nullable, column_default 
                FROM information_schema.columns 
                WHERE table_name = 'banners' 
                ORDER BY ordinal_position;
            """)
            
            columns = cursor.fetchall()
            print("\nüìã C·∫•u tr√∫c b·∫£ng banners:")
            print("+-" + "-" * 20 + "+-" + "-" * 20 + "+-" + "-" * 10 + "+-" + "-" * 30 + "+")
            print(f"| {'Column':<20} | {'Type':<20} | {'Nullable':<10} | {'Default':<30} |")
            print("+-" + "-" * 20 + "+-" + "-" * 20 + "+-" + "-" * 10 + "+-" + "-" * 30 + "+")
            
            for column in columns:
                col_name, data_type, is_nullable, default_val = column
                default_display = str(default_val)[:28] if default_val else ""
                print(f"| {col_name:<20} | {data_type:<20} | {is_nullable:<10} | {default_display:<30} |")
            
            print("+-" + "-" * 20 + "+-" + "-" * 20 + "+-" + "-" * 10 + "+-" + "-" * 30 + "+")
        else:
            print("‚ùå C√≥ l·ªói: B·∫£ng banners ch∆∞a ƒë∆∞·ª£c t·∫°o")
        
    except psycopg2.Error as e:
        print(f"‚ùå L·ªói database: {e}")
        if conn:
            conn.rollback()
        return False
        
    except Exception as e:
        print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}")
        return False
        
    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()
        print("üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi database")
    
    return True

if __name__ == "__main__":
    print("üöÄ B·∫Øt ƒë·∫ßu t·∫°o b·∫£ng banners...")
    print("=" * 50)
    
    success = create_banners_table()
    
    print("=" * 50)
    if success:
        print("üéâ Ho√†n th√†nh! B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng API banners ngay b√¢y gi·ªù.")
    else:
        print("üí• C√≥ l·ªói x·∫£y ra. Vui l√≤ng ki·ªÉm tra l·∫°i.") 